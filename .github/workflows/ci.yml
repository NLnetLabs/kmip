name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test_with_default_features:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Build against Rust 1.49.0 because in build.rs we say that is the oldest supported version.
        # Build against beta Rust to get early warning of any problems that might occur with the upcoming Rust release.
        # Test against Rust 1.54.0 because the test suite needs newer Rust than the library itself.
        # Order: oldest Rust to newest Rust.
        rust: [1.49.0, 1.54.0, stable, beta]
    steps:
    - uses: actions/checkout@v2

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}

    - name: Build
      run: cargo build --locked --verbose

    - name: Run tests
      run: cargo test --locked --verbose

  build_and_test_with_extra_features:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        args: [
          "--features tls-with-openssl --example demo",
          "--features tls-with-rustls --example demo",
          "--no-default-features --features sync",
          "--no-default-features --features async-with-tokio",
          "--no-default-features --features async-with-async-std",
          "--no-default-features --example demo --features tls-with-openssl",
          "--no-default-features --example demo --features tls-with-rustls",
          "--no-default-features --example demo --features tls-with-tokio-native-tls",
          "--no-default-features --example demo --features tls-with-tokio-rustls",
          "--no-default-features --example demo --features tls-with-async-tls",
        ]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      run: cargo build ${{ matrix.args }} --locked --verbose

    - name: Run tests
      if: matrix.rust != '1.49.0'
      run: cargo test ${{ matrix.args }} --locked --verbose
